// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`angularStories generator: libraries Stories for non-empty Angular library should generate cypress spec files 1`] = `
"describe('test-ui-lib', () => {
  beforeEach(() =>
    cy.visit(
      '/iframe.html?id=testbuttoncomponent--primary&args=buttonType:button;style:default;age;isOn:false;'
    )
  );
  it('should render the component', () => {
    cy.get('proj-test-button').should('exist');
  });
});
"
`;

exports[`angularStories generator: libraries Stories for non-empty Angular library should generate stories file for standalone components 1`] = `
"import { Meta } from '@storybook/angular';
import { StandaloneComponent } from './standalone.component';

export default {
  title: 'StandaloneComponent',
  component: StandaloneComponent,
} as Meta<StandaloneComponent>;

export const Primary = {
  render: (args: StandaloneComponent) => ({
    props: args,
  }),
  args: {},
};
"
`;

exports[`angularStories generator: libraries Stories for non-empty Angular library should generate stories file for standalone components 2`] = `
"import { Meta } from '@storybook/angular';
import { SecondaryStandaloneComponent } from './secondary-standalone.component';

export default {
  title: 'SecondaryStandaloneComponent',
  component: SecondaryStandaloneComponent,
} as Meta<SecondaryStandaloneComponent>;

export const Primary = {
  render: (args: SecondaryStandaloneComponent) => ({
    props: args,
  }),
  args: {},
};
"
`;

exports[`angularStories generator: libraries Stories for non-empty Angular library should generate stories.ts files 1`] = `
"import { Meta } from '@storybook/angular';
import { TestButtonComponent } from './test-button.component';

export default {
  title: 'TestButtonComponent',
  component: TestButtonComponent,
} as Meta<TestButtonComponent>;

export const Primary = {
  render: (args: TestButtonComponent) => ({
    props: args,
  }),
  args: {
    buttonType: 'button',
    style: 'default',
    age: 0,
    isOn: false,
  },
};
"
`;

exports[`angularStories generator: libraries Stories for non-empty Angular library should ignore paths 1`] = `
"import { Meta } from '@storybook/angular';
import { TestButtonComponent } from './test-button.component';

export default {
  title: 'TestButtonComponent',
  component: TestButtonComponent,
} as Meta<TestButtonComponent>;

export const Primary = {
  render: (args: TestButtonComponent) => ({
    props: args,
  }),
  args: {
    buttonType: 'button',
    style: 'default',
    age: 0,
    isOn: false,
  },
};
"
`;
