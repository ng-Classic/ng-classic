// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`directive generator should export the directive correctly when flat=false and path is nested deeper 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[projTest]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should export the directive correctly when flat=false and path is nested deeper 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator should export the directive correctly when flat=false and path is nested deeper 3`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './my-directives/test/test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [TestDirective],
})
export class TestModule {}
"
`;

exports[`directive generator should generate a directive with test files and attach to the NgModule automatically 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[projTest]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should generate a directive with test files and attach to the NgModule automatically 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator should generate a directive with test files and attach to the NgModule automatically 3`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator should import the directive correctly when flat=false 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[projTest]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should import the directive correctly when flat=false 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator should import the directive correctly when flat=false 3`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './test/test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator should import the directive correctly when flat=false and path is nested deeper 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[projTest]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should import the directive correctly when flat=false and path is nested deeper 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator should import the directive correctly when flat=false and path is nested deeper 3`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './my-directives/test/test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator should not generate test file when skipTests=true 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[projTest]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should not generate test file when skipTests=true 2`] = `
"import { NgModule } from '@angular/core';
import { TestDirective } from './my-directives/test/test.directive';
@NgModule({
  imports: [],
  declarations: [TestDirective],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator should not import the directive when skipImport=true 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[projTest]',
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should not import the directive when skipImport=true 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator should not import the directive when skipImport=true 3`] = `
"import { NgModule } from '@angular/core';
@NgModule({
  imports: [],
  declarations: [],
  exports: [],
})
export class TestModule {}
"
`;

exports[`directive generator should not import the directive when standalone=true 1`] = `
"import { Directive } from '@angular/core';

@Directive({
  selector: '[projTest]',
  standalone: true,
})
export class TestDirective {
  constructor() {}
}
"
`;

exports[`directive generator should not import the directive when standalone=true 2`] = `
"import { TestDirective } from './test.directive';

describe('TestDirective', () => {
  it('should create an instance', () => {
    const directive = new TestDirective();
    expect(directive).toBeTruthy();
  });
});
"
`;

exports[`directive generator should not import the directive when standalone=true 3`] = `
"import { NgModule } from '@angular/core';
@NgModule({
  imports: [],
  declarations: [],
  exports: [],
})
export class TestModule {}
"
`;
